{"version":3,"sources":["webpack:///../packages/ui-core/src/components/Select/Select.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Select","parentName","__position","__code","__scope","Playground","Props","Checked","DemoSelectWrapper","items","flexStyle","Metro","style","onSelect","currentValue","label","placeholder","canOpen","map","item","title","value","view","width","height","marginRight","notFoundText","isDisabled","required","verification","noticeText","type","isMDXComponent"],"mappings":"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","file":"component---packages-ui-core-src-components-select-select-mdx-f6386f6dd5198c750c6c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/megafon-ui/megafon-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Select from './Select';\nimport Checked from 'icons/System/24/Checked_24.svg';\nimport { DemoSelectWrapper, items, flexStyle } from './Select.docz';\nimport Metro from 'icons/System/24/Metro_24.svg';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"select\"\n    }}>{`Select`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Select} mdxType=\"Props\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`enum Verification {\n    VALID = 'valid',\n    ERROR = 'error',\n}\n\nenum Types {\n    CLASSIC = 'classic',\n    COMBOBOX = 'combobox',\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`export interface ISelectItem {\n    title: string;\n    value: number | string;\n    view?: JSX.Element[] | Element[] | JSX.Element | string | Element;\n}\n\ninterface ISelectClasses {\n    control?: string;\n    root?: string;\n}\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const items = [\n    {\n        value: 1,\n        title: 'Авиамоторная',\n    },\n    {\n        value: 2,\n        title: 'Академическая',\n    },\n    {\n        value: 3,\n        title: 'Бабушкинская',\n    },\n    {\n        value: 4,\n        title: 'Багратионовская',\n    },\n    {\n        value: 5,\n        title: 'ВДНХ',\n    },\n    {\n        value: 6,\n        title: 'Варшавская',\n    },\n    {\n        value: 7,\n        title: 'Деловой центр',\n    },\n    {\n        value: 8,\n        title: 'Дмитровская',\n    },\n    {\n        value: 9,\n        title: 'Калужская',\n    },\n    {\n        value: 10,\n        title: 'Кантемировская',\n    },\n];\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const DemoSelectWrapper = props => {\n    const [currentValue, setCurrentValue] = React.useState(undefined);\n\n    const handleSelect = (_e, data) => {\n        setCurrentValue(data.value);\n    };\n\n    return (\n        <div style={DemoSelectWrapperStyle}>\n            {props.children({\n                onSelect: handleSelect,\n                currentValue: currentValue,\n            })}\n        </div>\n    );\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h2>\n    <Playground __position={1} __code={'<div style={flexStyle}>\\n  <DemoSelectWrapper>\\n    {({ onSelect, currentValue }) => (\\n      <Select\\n        label=\\\"Classic (default) type\\\"\\n        onSelect={onSelect}\\n        placeholder=\\\"Choose your step\\\"\\n        items={items}\\n        currentValue={currentValue}\\n      />\\n    )}\\n  </DemoSelectWrapper>\\n  <DemoSelectWrapper>\\n    {({ onSelect, canOpen, currentValue }) => (\\n      <Select\\n        label=\\\"Icon components in the list\\\"\\n        placeholder=\\\"Choose your step\\\"\\n        items={items.map(item => ({\\n          title: item.title,\\n          value: item.value,\\n          view: (\\n            <>\\n              <Metro\\n                style={{ width: \\'24px\\', height: \\'24px\\', marginRight: \\'16px\\' }}\\n              />\\n              {item.title}\\n            </>\\n          ),\\n        }))}\\n        onSelect={onSelect}\\n        currentValue={currentValue}\\n      />\\n    )}\\n  </DemoSelectWrapper>\\n  <DemoSelectWrapper>\\n    {({ onSelect, canOpen, currentValue }) => (\\n      <Select\\n        label=\\\"Zero items\\\"\\n        placeholder=\\\"Choose your step\\\"\\n        items={[]}\\n        notFoundText=\\\"Nothing found\\\"\\n      />\\n    )}\\n  </DemoSelectWrapper>\\n  <DemoSelectWrapper>\\n    {({ onSelect, currentValue }) => (\\n      <Select\\n        label=\\\"Disabled state\\\"\\n        isDisabled\\n        onSelect={onSelect}\\n        placeholder=\\\"You have no choice\\\"\\n        items={items}\\n        currentValue={currentValue}\\n      />\\n    )}\\n  </DemoSelectWrapper>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Select,\n      Checked,\n      DemoSelectWrapper,\n      items,\n      flexStyle,\n      Metro,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <div style={flexStyle}>\n        <DemoSelectWrapper mdxType=\"DemoSelectWrapper\">\n            {({\n            onSelect,\n            currentValue\n          }) => <Select label=\"Classic (default) type\" onSelect={onSelect} placeholder=\"Choose your step\" items={items} currentValue={currentValue} mdxType=\"Select\" />}\n        </DemoSelectWrapper>\n        <DemoSelectWrapper mdxType=\"DemoSelectWrapper\">\n            {({\n            onSelect,\n            canOpen,\n            currentValue\n          }) => <Select label=\"Icon components in the list\" placeholder=\"Choose your step\" items={items.map(item => ({\n            title: item.title,\n            value: item.value,\n            view: <>\n                                <Metro style={{\n                width: '24px',\n                height: '24px',\n                marginRight: '16px'\n              }} mdxType=\"Metro\" />\n                                {item.title}\n                            </>\n          }))} onSelect={onSelect} currentValue={currentValue} mdxType=\"Select\" />}\n        </DemoSelectWrapper>\n        <DemoSelectWrapper mdxType=\"DemoSelectWrapper\">\n            {({\n            onSelect,\n            canOpen,\n            currentValue\n          }) => <Select label=\"Zero items\" placeholder=\"Choose your step\" items={[]} notFoundText=\"Nothing found\" mdxType=\"Select\" />}\n        </DemoSelectWrapper>\n        <DemoSelectWrapper mdxType=\"DemoSelectWrapper\">\n            {({\n            onSelect,\n            currentValue\n          }) => <Select label=\"Disabled state\" isDisabled onSelect={onSelect} placeholder=\"You have no choice\" items={items} currentValue={currentValue} mdxType=\"Select\" />}\n        </DemoSelectWrapper>\n    </div>\n    </Playground>\n    <h1 {...{\n      \"id\": \"validation\"\n    }}>{`Validation`}</h1>\n    <Playground __position={2} __code={'<div style={flexStyle}>\\n  <DemoSelectWrapper>\\n    {({ onSelect, currentValue }) => (\\n      <Select\\n        label=\\\"Valid state\\\"\\n        required\\n        verification=\\\"valid\\\"\\n        noticeText=\\\"Success message\\\"\\n        onSelect={onSelect}\\n        placeholder=\\\"Choose your step\\\"\\n        items={items}\\n        currentValue={currentValue}\\n      />\\n    )}\\n  </DemoSelectWrapper>\\n  <DemoSelectWrapper>\\n    {({ onSelect, currentValue }) => (\\n      <Select\\n        label=\\\"Error state\\\"\\n        required\\n        verification=\\\"error\\\"\\n        noticeText=\\\"Error message\\\"\\n        onSelect={onSelect}\\n        placeholder=\\\"Choose your step\\\"\\n        items={items}\\n        currentValue={currentValue}\\n      />\\n    )}\\n  </DemoSelectWrapper>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Select,\n      Checked,\n      DemoSelectWrapper,\n      items,\n      flexStyle,\n      Metro,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <div style={flexStyle}>\n        <DemoSelectWrapper mdxType=\"DemoSelectWrapper\">\n            {({\n            onSelect,\n            currentValue\n          }) => <Select label=\"Valid state\" required verification=\"valid\" noticeText=\"Success message\" onSelect={onSelect} placeholder=\"Choose your step\" items={items} currentValue={currentValue} mdxType=\"Select\" />}\n        </DemoSelectWrapper>\n        <DemoSelectWrapper mdxType=\"DemoSelectWrapper\">\n            {({\n            onSelect,\n            currentValue\n          }) => <Select label=\"Error state\" required verification=\"error\" noticeText=\"Error message\" onSelect={onSelect} placeholder=\"Choose your step\" items={items} currentValue={currentValue} mdxType=\"Select\" />}\n        </DemoSelectWrapper>\n    </div>\n    </Playground>\n    <h1 {...{\n      \"id\": \"combobox\"\n    }}>{`Combobox`}</h1>\n    <Playground __position={3} __code={'<div style={flexStyle}>\\n  <DemoSelectWrapper>\\n    {({ onSelect, currentValue }) => (\\n      <Select\\n        label=\\\"Combobox type\\\"\\n        type=\\\"combobox\\\"\\n        onSelect={onSelect}\\n        placeholder=\\\"Choose or type your step\\\"\\n        items={items}\\n        currentValue={currentValue}\\n      />\\n    )}\\n  </DemoSelectWrapper>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Select,\n      Checked,\n      DemoSelectWrapper,\n      items,\n      flexStyle,\n      Metro,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <div style={flexStyle}>\n        <DemoSelectWrapper mdxType=\"DemoSelectWrapper\">\n            {({\n            onSelect,\n            currentValue\n          }) => <Select label=\"Combobox type\" type=\"combobox\" onSelect={onSelect} placeholder=\"Choose or type your step\" items={items} currentValue={currentValue} mdxType=\"Select\" />}\n        </DemoSelectWrapper>\n    </div>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}