{"version":3,"sources":["webpack:///../packages/ui-core/src/components/Checkbox/Checkbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Checkbox","__position","__code","__scope","Playground","Props","Info","CheckboxWrapper","LightColorWrapper","checked","onChange","fontSize","error","color","extraContent","style","backgroundColor","padding","disabled","isMDXComponent"],"mappings":"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","file":"component---packages-ui-core-src-components-checkbox-checkbox-mdx-5cf32f9035b54e5c239f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/megafon-ui/megafon-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport Checkbox from './Checkbox';\nimport Info from 'icons/System/16/Info_16.svg';\nimport { CheckboxWrapper, LightColorWrapper } from './Checkbox.docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<CheckboxWrapper>\\n  {({ checked, onChange }) => (\\n    <Checkbox checked={checked} onChange={onChange}>\\n      I agree\\n    </Checkbox>\\n  )}\\n</CheckboxWrapper>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Info,\n      CheckboxWrapper,\n      LightColorWrapper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CheckboxWrapper mdxType=\"CheckboxWrapper\">\n        {({\n          checked,\n          onChange\n        }) => <Checkbox checked={checked} onChange={onChange} mdxType=\"Checkbox\">\n                I agree\n            </Checkbox>}\n    </CheckboxWrapper>\n    </Playground>\n    <h2 {...{\n      \"id\": \"checkbox-with-small-label-size\"\n    }}>{`Checkbox with small label size`}</h2>\n    <Playground __position={2} __code={'<CheckboxWrapper>\\n  {({ checked, onChange }) => (\\n    <Checkbox checked={checked} onChange={onChange} fontSize=\\\"small\\\">\\n      I agree\\n    </Checkbox>\\n  )}\\n</CheckboxWrapper>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Info,\n      CheckboxWrapper,\n      LightColorWrapper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CheckboxWrapper mdxType=\"CheckboxWrapper\">\n        {({\n          checked,\n          onChange\n        }) => <Checkbox checked={checked} onChange={onChange} fontSize=\"small\" mdxType=\"Checkbox\">\n                I agree\n            </Checkbox>}\n    </CheckboxWrapper>\n    </Playground>\n    <h2 {...{\n      \"id\": \"checkbox-usage-with-error\"\n    }}>{`Checkbox usage with error`}</h2>\n    <Playground __position={3} __code={'<CheckboxWrapper>\\n  {({ checked, onChange }) => (\\n    <Checkbox checked={checked} onChange={onChange} error>\\n      I agree\\n    </Checkbox>\\n  )}\\n</CheckboxWrapper>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Info,\n      CheckboxWrapper,\n      LightColorWrapper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CheckboxWrapper mdxType=\"CheckboxWrapper\">\n        {({\n          checked,\n          onChange\n        }) => <Checkbox checked={checked} onChange={onChange} error mdxType=\"Checkbox\">\n                I agree\n            </Checkbox>}\n    </CheckboxWrapper>\n    </Playground>\n    <h2 {...{\n      \"id\": \"checkbox-usage-for-light-color-scheme\"\n    }}>{`Checkbox usage for light color scheme`}</h2>\n    <Playground __position={4} __code={'<LightColorWrapper>\\n  <CheckboxWrapper>\\n    {({ checked, onChange }) => (\\n      <Checkbox checked={checked} onChange={onChange} color=\\\"light\\\">\\n        I agree\\n      </Checkbox>\\n    )}\\n  </CheckboxWrapper>\\n</LightColorWrapper>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Info,\n      CheckboxWrapper,\n      LightColorWrapper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <LightColorWrapper mdxType=\"LightColorWrapper\">\n        <CheckboxWrapper mdxType=\"CheckboxWrapper\">\n            {({\n            checked,\n            onChange\n          }) => <Checkbox checked={checked} onChange={onChange} color=\"light\" mdxType=\"Checkbox\">\n                    I agree\n                </Checkbox>}\n        </CheckboxWrapper>\n    </LightColorWrapper>\n    </Playground>\n    <h2 {...{\n      \"id\": \"checkbox-with-extracontent\"\n    }}>{`Checkbox with extraContent`}</h2>\n    <Playground __position={5} __code={'<CheckboxWrapper>\\n  {({ checked, onChange }) => (\\n    <Checkbox\\n      checked={checked}\\n      onChange={onChange}\\n      extraContent={\\n        <div\\n          style={{\\n            backgroundColor: \\'#00B956\\',\\n            color: \\'#FFF\\',\\n            padding: \\'5px\\',\\n          }}\\n        >\\n          Some Extra Content\\n        </div>\\n      }\\n    >\\n      I agree\\n    </Checkbox>\\n  )}\\n</CheckboxWrapper>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Info,\n      CheckboxWrapper,\n      LightColorWrapper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CheckboxWrapper mdxType=\"CheckboxWrapper\">\n        {({\n          checked,\n          onChange\n        }) => <Checkbox checked={checked} onChange={onChange} extraContent={<div style={{\n          backgroundColor: '#00B956',\n          color: '#FFF',\n          padding: '5px'\n        }}>\n                        Some Extra Content\n                    </div>} mdxType=\"Checkbox\">\n                I agree\n            </Checkbox>}\n    </CheckboxWrapper>\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled-unchecked-checkbox\"\n    }}>{`Disabled unchecked checkbox`}</h2>\n    <Playground __position={6} __code={'<CheckboxWrapper>\\n  {() => <Checkbox disabled>I agree</Checkbox>}\\n</CheckboxWrapper>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Info,\n      CheckboxWrapper,\n      LightColorWrapper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CheckboxWrapper mdxType=\"CheckboxWrapper\">\n        {() => <Checkbox disabled mdxType=\"Checkbox\">I agree</Checkbox>}\n    </CheckboxWrapper>\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled-checked-checkbox\"\n    }}>{`Disabled checked checkbox`}</h2>\n    <Playground __position={7} __code={'<CheckboxWrapper>\\n  {() => (\\n    <Checkbox checked disabled>\\n      I agree\\n    </Checkbox>\\n  )}\\n</CheckboxWrapper>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Info,\n      CheckboxWrapper,\n      LightColorWrapper,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CheckboxWrapper mdxType=\"CheckboxWrapper\">\n        {() => <Checkbox checked disabled mdxType=\"Checkbox\">I agree</Checkbox>}\n    </CheckboxWrapper>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}